#ifndef __imapx200_keybd_H
#define __imapx200_keybd_H

#include <linux/input.h>

#define MAX_MATRIX_KEY_ROWS	(18)
#define MAX_MATRIX_KEY_COLS	(8)
#define MAX_MATRIX_KEY_NUM	(MAX_MATRIX_KEY_ROWS * MAX_MATRIX_KEY_COLS)

unsigned int IntermediateScanCode[]=
{
    0x69,    //0x00  //VK_NUMPAD1 -hjf
    0x76,   //0x01  //VK_ESC   -hjf
    0x0D,     //0x2   //VK_TAB -hjf
    0x15,     //0x3   //VK_Q -hjf
    0x1A,      //0x4  //VK_Z  -hjf
    0x0,//0x05
    0x87, //0x06  // VK_OEM_3  " `~ " for us -hjf
    0x1C,   //0x07  //VK_A  -hjf

    0x27,  //0x08    //VK_FN  -hjf
    0x0,
    0x12,//0x0A	//VK_LSHIFT  -hjf
    0x0,
    0x0,
    0x0C,			//VK_F4, VK_APP1,SW4
    0x05, //0x0e     //VK_F1  -hjf
    0x59,  //0x0f      //VK_RSHIFT  -hjf
    
    0x03,//0x10       //VK_F5    -hjf
    0x0,
    0x0,
    0x7F,  //0x13    //VK_PAUSE  -hjf
    0x94,			//VK_MENU, VK_APP2, SW1       
    0x29,//0x15	//VK_SPACE, VK_VOLUME_DOWN,SW5   
    0x8F,  //0x16     // VK_CONTROL   -hjf
    0x0,

    0x0,
    0x0,
    0x66,//0x1A    //VK_BACK -hjf
    0x0,
    0x0,
    0x5A,   //0x1C  //VK_RETURN  -hjf
    0x01,	//0x1E		//VK_F9 -hjf
    0x0,
    
    0x0,//0x20
    0x0,
    0x0,
    0x0,
    0x0,
    0x0,//0x25
    0x06,		//0x26	//VK_F2  -hjf
    0x0,
    
    0x72,    //0x28  //VK_NUMPAD2 -hjf
    0x8A,  //0x29   //VK_OEM_5 "\" -hjf
    0x58,//0x2A //VK_CAPITAL -hjf
    0x1D, //0x2b     //VK_W -hjf
    0x22,   //0x2c   //VK_X  -hjf
    0x0,
    0x98,			//VK_DOWN, VK_LEFT, S1 
    0x1B, //0x2f  //VK-S -hjf
    
    0x6B,//0x30  //VK_NUMPAD4 -hjf
    0x34,  //0x31 //VK_G -hjf
    0x2C,   //0x32  //VK_T -hjf
    0x2D, //0x33  //VK_R  -hjf
    0x2A,  //0x34  //VK_V  -hjf
    0x32,   //0x35  //VK_B  -hjf
    0x73,	//0x36	//VK_NUMPAD5 -hjf
    0x2B,   //0x37   //VK_F  -hjf
    
    0x7a,    //0x38    //VK_NUMPAD3 -hjf
    0x0C,   //0x39     //VK_F4   -hjf
    0x04,   //0x3A     //VK_F3   -hjf
    0x24,    //0x3b     //VK_E    -hjf
    0x21,     //0x3c    //VK_C   -hjf
    0x0,
    0x0,
    0x23, //0x3F	//VK_D  -hjf       

    0x6c,  //0x40  //VK_NUMPAD7  -hjf
    0x33,   //0x41  //VK_H  -hjf
    0x35,    //0x42 //VK_Y -hjf
    0x3C,      //0x43 //VK_U -hjf
    0x3A,     //0x44  //VK_M  -hjf
    0x31,  //0x45  //VK_N  -hjf
    0x74,  //0x46   //VK_NUMPAD6  -hjf
    0x3B,    //0x47  //VK_J  -hjf
    0x09, //0x48  //VK_F10 -hjf
    0x0,  
    0x99,  //0x4a  //VK_LWIN  -hjf
    0x0,
    0x0,
    0x0,
    0x0,
    0x0, //0x4f

    0x75,   //0x50  //VK_NUMPAD8 -hjf
    0x0B,  //0x51  //VK_F6 -hjf
    0x82,   //0x52  //VK_OEM_6  "]"  -hjf
    0x43,   //0x53   //VK_I  -hjf
    0x8C,   //0x54   //VK_OEM_COMMA  "," -hjf
    0x0,  //0x55
    0x89,  //0x56 //VK_OEM_PLUS "+" -hjf
    0x42,   //0x57 //VK_K -hjf
    0x7d, //0x58 //VK_NUMPAD9  -hjf
    0x0,  
    0x83,  //0x5a  //VK_F7 -hjf
    0x44,    //0x5b //VK_O -hjf
    0x8D,    //0x5c  //VK_OEM_PERIOD "."  -hjf
    0x80,   //0x5D  //VK_RBUTTON   -hjf
    0x0A, //0x5E   //VK_F8 -hjf
    0x4B, //0x5f  //VK_L  -hjf

    0x70,  //0x60 //VK_NUMPAD0 -hjf
    0x6D,    //0x61  //VK_OEM_7  " ' "  -hjf
    0x81,    //0x62  //VK_OEM_4  "["  -hjf
    0x4D,  //0x63 //VK_P -hjf
    0x8A,   //0x64 //VK_OEM_5 "\" -hjf
    0x8E,  //0x65  //VK_OEM_2   "/"  -hjf
    0x88,  //0x66 //VK_OEM_MINUS   "-" -hjf
    0x8B,    //0x67 //VK_OEM_1  ";"  -hjf
    0x84,  //0x68 //VK_PRTSCR -hjf
    0x94,   //0x69  //VK_MENU   -hjf
    0x0,  //0x6a
    0x0,
    0x0,
    0x0,
    0x0,
    0x0, //0x6f

    0x0,  //0x70
    0x0,
    0x0,
    0x0, 
    0x0,
    0x0,  //0x75
    0x85,  //0x76 //VK_INSERT -hjf
    0x0,
    0x0,
    0x98,  //0x79  //VK_DOWN  -hjf
    0x0,  //0x7a
    0x0,
    0x96, //0x7c  //VK_LEFT    -hjf
    0x97,  //0x7D  //VK_RIGHT  -hjf
    0x0,
    0x95, //0x7f //VK_UP  -hjf

    0x0,  //0x80
    0x29,  //0x81 //VK_SPACE  -hjf
    0x0,
    0x0, 
    0x77,  //0x84   //VK_NUMLOCK  -hjf
    0x0,  //0x85
    0x86,   //0x86  //VK_DEL -hjf
    0x0,
    0x0,
    0x0,  
    0x0,  //0x8a
    0x0,
    0x0,
    0x0,
    0x0,
    0x0, //0x8f
};

struct imapx200_keybd {
	
	struct input_dev *input_dev;
	struct clk *clk;

	void __iomem *mmio_base;

	int irq;

	unsigned int rows;
	unsigned int cols;
	unsigned long delay;
	unsigned int debounce;

	unsigned int matrix_keycodes[MAX_MATRIX_KEY_NUM];
	unsigned int matrix_key_state[MAX_MATRIX_KEY_ROWS];

	int suspend;
};
 
#endif 
